scalar Date

input Pagination {
  first: Int
  offset: Int
}

input Ordering {
  orderBy: String
  orientation: String
}

input Filter {
  argument: String
}

input TesteFilter {
  pagination: Pagination
  ordering: Ordering
  filter: Filter
}

input TesteInput {
  name: String!
}

type Teste @key(fields: "id") {
  id: ID!
  name: String!
  createdAt: Date!
  updatedAt: Date!
  removedAt: Date
}

type TesteList {
  data: [Teste]!
  totalCount: Int
}

type Query {
  testeHelloWorld: String!
  getTesteList(filter: TesteFilter): TesteList!
  getTesteById(testeId: ID!): Teste!
}

type Mutation {
  createTeste(createTesteInput: TesteInput): Teste!
  updateTeste(testeId: ID!, updateTesteInput: TesteInput!): Teste!
  removeTeste(testeId: ID!): Teste!
}
